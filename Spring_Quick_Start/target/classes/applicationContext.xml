<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.2.xsd
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
						http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
">

	<context:component-scan base-package="com.springbook.biz"></context:component-scan>
	
	<!-- DataSource 설정
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:tcp://localhost/~/test" />
		<property name="username" value="sa" />
		<property name="password" value="" />
	</bean>
	 -->
	<!-- database.properties 생성시 -->
	<context:property-placeholder location="classpath:config/database.properties"/>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
	
	<!-- 어노테이션 기반 AOP -->
	<aop:aspectj-autoproxy></aop:aspectj-autoproxy>
	
	<!-- xml 기반 AOP -->
	<!-- before
	<bean id="before" class="com.springbook.biz.common.BeforeAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
		<aop:aspect ref="before">
			<aop:before method="beforeLog" pointcut-ref="allPointcut"/>
		</aop:aspect>
	</aop:config>
	
	afterReturning
	<bean id="afterReturning" class="com.springbook.biz.common.AfterReturuningAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.get*(..))" id="getPointcut"/>
		<aop:aspect ref="afterReturning">
			<aop:after-returning method="afterLog" pointcut-ref="getPointcut" returning="returnObj"/>
		</aop:aspect>
	</aop:config>
	
	afterThrowing
	<bean id="afterThrowing" class="com.springbook.biz.common.AfterThrowingAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
		<aop:aspect ref="afterThrowing">
			<aop:after-throwing method="exceptionLog" pointcut-ref="allPointcut" throwing="exceptionObj"/>
		</aop:aspect>
	</aop:config>
	
	after
	<bean id="after" class="com.springbook.biz.common.AfterAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
		<aop:aspect ref="after">
			<aop:after method="finallyLog" pointcut-ref="allPointcut"/>
		</aop:aspect>
	</aop:config>
	
	around
	<bean id="around" class="com.springbook.biz.common.AroundAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
		<aop:aspect ref="around">
			<aop:around method="aroundLog" pointcut-ref="allPointcut"/>
		</aop:aspect>
	</aop:config> 
	-->
	
	<!-- <bean id="log" class="com.springbook.biz.common.Log4jAdvice"></bean>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.get*(..))" id="getPointcut"/>
		<aop:aspect ref="log">
			<aop:before method="printLogging" pointcut-ref="getPointcut"/>
		</aop:aspect>
	</aop:config> -->
	
	<!-- 트렌젝션 설정 -->
	<!-- <bean id="txManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="get*" read-only="true"/>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.springbook.biz..*Impl.*(..))" id="allPointcut"/>
		
		<aop:advisor advice-ref="txAdvice" pointcut-ref="allPointcut"/>
	</aop:config> --> 
	
	<!-- <bean id="userService" class="com.springbook.biz.user.impl.UserServiceImpl">
		<constructor-arg name="userDAO" ref="userDAO"></constructor-arg>
	</bean>
	
	<bean id="userDAO" class="com.springbook.biz.user.impl.UserDAO"></bean> -->

</beans>
